\section{Discrete Sensitivity Formulation}
The derivation of the discrete sensitivity equations starts with the discrete form of the governing equations. For the linear case, the governing equation \eqref{eq:C2_generalGoverningEquation} is discretized as shown in Equation \eqref{eq:C2_discreteGoverningEquation}

\begin{equation}\label{eq:C2_discreteGoverningEquation}
	\left[ K \right] \left[ U \right] = \left[ F \right]
\end{equation}

where $[K]$ is the discrete operator that represents the governing equation, $[U]$ is the vector of response variables defined at each of the degrees of freedom, and $[F]$ is the vector of the applied loads. The sensitivity of this system with respect to design variable $b$ is derived by differentiating Equation \eqref{eq:C2_discreteGoverningEquation}.

\begin{equation}\label{eq:C2_discreteSensitivityEquation}
	\left[ K \right] \left[ \frac{\partial U}{\partial b} \right] = 
	\left[ \frac{\partial F}{\partial b} \right] - 
	\left[ \frac{\partial K}{\partial b} \right] \left[ U \right]
\end{equation}

Solving Equation \eqref{eq:C2_discreteSensitivityEquation} yields a solution for sensitivity of response variable, $\partial u/\partial b$. This is achievable if the values of $\partial F/\partial b$ and $\partial K/\partial b$ are known. It should be noted that $U$ is a known value by the governing equation \eqref{eq:C2_discreteGoverningEquation} is solved. For the case of design independent loads, $\partial F/\partial b$ is equal to zero. This happens in many situations such as design optimization with pure mechanical loads. This assumption is violated for the cases when changing the design variables alter the loadings on the structure. The best example for this case is design of thermally loaded structures where due to thermal expansions, changing the size of elements will affect the thermal loadings \cite{deaton2013stiffening}. Calculating the $\partial K/\partial b$ term requires a detailed understanding about the discretization approach. This often requires source code modification which makes this method difficult to implement for commercial codes such as ABAQUS or FLUENT. The discrete method is highly accurate approach for calculating the sensitivities as will demonstrated with the following examples however, it is almost impossible to impliment in general purpose solvers.

% -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-
\subsection{Implementation for heat transfer}
The discrete sensitivity equations are formulated by discretizing the governing equation \eqref{eq:C2_laplaceEquation} using finite difference method. It should be noted that the finite difference is used for discretization of continuum governing equation and not for sensitivity calculation. Other techniques such as finite volume or finite elements can be used for the discretization of the governing equations as well. For this problem, the design variable affects the shape of the domain which is related to the distance between the nodes in the discrete manner. Therefore, for the sake of sensitivity analysis it is required to keep the nodal distances in the discretized solution as well. The domain is discretized by using 6 nodes as shown in Figure \ref{fig:C2_discretizedDomain}.

\begin{figure}[h]
	\centering
	\includegraphics[width=14.00cm]{Chapter_2/figure/benchmark_case_computational_domain.png}
	\caption{One dimensional computational domain for the heat conduction problem.}
	\label{fig:C2_discretizedDomain}
\end{figure}

The second derivative of Equation \eqref{eq:C2_laplaceEquation} needs to be approximated for discretization. This is done by writing the Taylor series expansion of temperature at arbitrary location $x_i$. By using the central difference method the second order approximation for the second order derivative is written as shown in Equation \eqref{eq:C2_finiteDifferenceSchemes}.

To maintain the generality, we assume that distance of node $T_i$ to $T_{i+1}$ is $\Delta_i$ and the distance of node $T_i$ to $T_{i-1}$ is $\Delta_{i-1}$.

\begin{equation}\label{eq:C2_finiteDifferenceSchemes}
	\frac{\partial^2 T}{\partial x^2} = 
	\frac{T_{i-1} \Delta_{iL} - 
	      T_{i} (\Delta_{iL} + \Delta_{iR}) + 
	      T_{i+1} \Delta_{iR}}
	     {\dfrac{1}{2} \left[ \Delta_{iL} \Delta_{iR}^2 + 
	                         \Delta_{iL}^2 \Delta_{iR} \right]}
\end{equation}

The discretized governing equation of \eqref{eq:C2_finiteDifferenceSchemes} is written in a matrix form as shown in Equation \eqref{eq:C2_laplaceEquationMatrixForm}.

\begin{equation}\label{eq:C2_laplaceEquationMatrixForm}
	\begin{bmatrix}
		\frac{-2}{\Delta_{1} \Delta_{2}} &
		\frac{2}{\Delta_{1} \Delta_{2} + \Delta_{1}^2} &
		0 &
		0 &
		\\
		\frac{2}{\Delta_{3}^2 + \Delta_{2} \Delta_{3}} & 
		\frac{-2}{\Delta_{2} \Delta_{3}} &
		\frac{2}{\Delta_{2} \Delta_{3} + \Delta_{2}^2} &
		0
		\\
		0 &
		\frac{2}{\Delta_{4}^2 + \Delta_{3} \Delta_{4}} & 
		\frac{-2}{\Delta_{3} \Delta_{4}} &
		\frac{2}{\Delta_{3} \Delta_{4} + \Delta_{3}^2} &
		\\
		0 &
		0 &
		\frac{2}{\Delta_{5}^2 + \Delta_{4} \Delta_{5}} & 
		\frac{-2}{\Delta_{4} \Delta_{5}}
	\end{bmatrix}
	\begin{bmatrix}
		T_2 \\
		T_3 \\
		T_4 \\
		T_5
	\end{bmatrix}
	=
	-\begin{bmatrix}
	 	\frac{2T_1}{\Delta_{2}^2 + \Delta_{1} \Delta_{2}} \\
 		0 \\
		0 \\
		\frac{2T_6}{\Delta_{5} \Delta_{4} + \Delta_{5}^2}
	\end{bmatrix}
\end{equation}

To verify the discretization process, we compare the analytical solution of this problem with the result of Equation \eqref{eq:C2_laplaceEquationMatrixForm} in Figure \ref{fig:C2_verificationOfSolver}. For this problem we choose $T_1 = 0$, $T_6 = 1$ as the boundary conditions, and $L = 1$.  As shown in this figure, the discrete and continuum results match very well for different number of nodes. This is done by comparing the absolute error between the analytical and approximate results as shown in Table \ref{table:C2_solutionError}.

\begin{figure}[H]
	\centering
	\subfigure[$n = 6$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/finitedifference_vs_analytical_n6.eps}
	}
	\quad
	\subfigure[$n = 12$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/finitedifference_vs_analytical_n12.eps}
	}
	\\
	\subfigure[$n = 24$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/finitedifference_vs_analytical_n24.eps}
	}
	\quad
	\subfigure[$n = 48$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/finitedifference_vs_analytical_n48.eps}
	}
	\caption{Comparison between the analytical and finite difference solutions for 1D heat equation for different number of nodes.}
	\label{fig:C2_verificationOfSolver}
\end{figure}

\begin{table}[H]
\centering
\begin{tabular}{| c | c |}
	\hline
	Number of nodes & absolute error \\ \hline \hline
	6 & $1.85 \times 10^{-16}$ \\ \hline
	12 & $2.03 \times 10^{-16}$ \\ \hline
	24 & $1.27 \times 10^{-15}$ \\ \hline
	48 & $8.55 \times 10^{-15}$ \\ \hline
\end{tabular}
\caption{Absolute error value for different number of nodes.}
\label{table:C2_solutionError}
\end{table}

The discrete sensitivity equations are derived by differentiating the discretized governing equation of \eqref{eq:C2_laplaceEquationMatrixForm} with respect to the length of the domain. We assume that the change in the length, only affects the nodal distance between the last two nodes and the rest remain unchanged. This means that only the node next to the boundary will move and the rest of nodes will be stationary. This is required to make sure that the sensitivity at each of the degrees of freedom is only a function of change in shape not movement of material nodes therefore, $\partial x/\partial b$ is equal to zero.

In order to differentiate Equation  \eqref{eq:C2_laplaceEquationMatrixForm}, it is required to calculate the derivative of nodal distances in Equation \eqref{eq:C2_laplaceEquationMatrixForm} with respect to $L$, $\partial \Delta_i/\partial L$. For an equally spaced grid, the nodal distance is written as

\begin{equation*}
	\Delta = \frac{L}{n - 1}
\end{equation*}

where $L$ is the length of the domain, and $n$ is the number of nodes used to discretize the domain. Therefore, the sensitivity of nodal distances to the length of the domain is calculated as

\begin{equation}\label{eq:C2_nodeDistanceSensitivity}
	\frac{\partial \Delta}{\partial L} = \frac{1}{n-1}
\end{equation}

The differentiated form of the discretized equation is written as shown in Equation \eqref{eq:C2_laplaceEquationMatrixFormSensitivity}. It should be noted that since only the adjacent node to the boundary is affected by shape change, only that element in the matrix derivative has a value.

\begin{equation}\label{eq:C2_laplaceEquationMatrixFormSensitivity}
	\begin{bmatrix}
		-2 & 1 & 0 & 0 \\
		1 & -2 & 1 & 0 \\
		0 & 1 & -2 & 1 \\
		0 & 0 & 1 & -2
	\end{bmatrix}
	\begin{bmatrix}
		T'_2 \\
		T'_3 \\
		T'_4 \\
		T'_5
	\end{bmatrix}
	=
	\frac{1}{2} \frac{\partial \Delta}{\partial L} \frac{1}{\Delta}
	\begin{bmatrix}
		0 \\
		0 \\
		0 \\
		T_6
	\end{bmatrix}
	-
	\underbrace{
	\frac{1}{2} \frac{\partial \Delta}{\partial L} \frac{1}{\Delta}
	\begin{bmatrix}
		0 & 0 & 0 & 0 \\
		0 & 0 & 0 & 0 \\
		0 & 0 & 0 & 0 \\
		0 & 0 & -3 & 1
	\end{bmatrix}
	\begin{bmatrix}
		T_2 \\
		T_3 \\
		T_4 \\
		T_5
	\end{bmatrix}}_\text{effect of shape change}
\end{equation}

where $T^\prime_i$ represents the sensitivity of temperature with respect to length of the domain.

To verify the results of Equation \eqref{eq:C2_laplaceEquationMatrixFormSensitivity}, we compared it with the analytical sensitivity results as shown in Figure \ref{fig:C2_discreteSensitivityVerification}. We discretized the domain using $11$, $41$, $81$, and $161$ nodes for this purpose, however this does not affect the solution accuracy. We chose the normalized root-mean-square deviation (NRMSD) for comparing the sensitivity results. This is defined as shown in Equation \eqref{eq:C2_NRMSD}.

\begin{equation}\label{eq:C2_NRMSD}
	NRMSD = \dfrac{\sqrt{\dfrac{\sum (\hat{y}_t - y)^2}{n}}}{y_{max} - y_{min}}
\end{equation}

where $\hat{y}$ is the value calculated using DSA and $y$ is the true value calculated by analytical equation. The results for the NRMSD for this problem for different number of nodes are shown in Table \ref{table:C2_DSA_NRMSD}.

\begin{figure}[H]
	\centering
	\subfigure[$n = 11$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/DSA_n11.eps}
	}
	\quad
	\subfigure[$n = 41$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/DSA_n41.eps}
	}
	\\
	\subfigure[$n = 81$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/DSA_n81.eps}
	}
	\quad
	\subfigure[$n = 161$]
	{
	\includegraphics[width=7.0cm]{Chapter_2/figure/DSA_n161.eps}
	}
	\caption{Comparison between discrete sensitivity analysis and analytical results for different number of nodes.}
	\label{fig:C2_discreteSensitivityVerification}
\end{figure}

\begin{table}[H]
\centering
\begin{tabular}{| c | c |}
	\hline
	Number of nodes & NRMSD \\ \hline \hline
	11 & $1.68 \times 10^{-16}$ \\ \hline
	41 & $2.49 \times 10^{-15}$ \\ \hline
	81 & $1.49 \times 10^{-15}$ \\ \hline
	161 & $2.85 \times 10^{-15}$ \\ \hline
\end{tabular}
\caption{RMSE value for different number of nodes.}
\label{table:C2_DSA_NRMSD}
\end{table}

As shown in Figure \ref{fig:C2_discreteSensitivityVerification} and Table \ref{table:C2_DSA_NRMSD}, the accuracy of discrete sensitivity analysis is not affected by the number of nodes chosen to discretize the domain.

% -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-
\subsection{Implementation for solid mechanics problem}